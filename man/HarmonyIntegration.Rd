% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/integration5.R
\name{HarmonyIntegration}
\alias{HarmonyIntegration}
\title{Harmony Integration}
\usage{
HarmonyIntegration(
  object,
  orig,
  groups,
  features = NULL,
  scale.layer = "scale.data",
  layers = NULL,
  npcs = 50L,
  key = "harmony_",
  theta = NULL,
  lambda = NULL,
  sigma = 0.1,
  nclust = NULL,
  tau = 0,
  block.size = 0.05,
  max.iter.harmony = 10L,
  max.iter.cluster = 20L,
  epsilon.cluster = 1e-05,
  epsilon.harmony = 1e-04,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{object}{An \code{\link[SeuratObject]{Assay5}} object}

\item{orig}{A \link[SeuratObject:DimReduc]{dimensional reduction} to correct}

\item{groups}{A one-column data frame with grouping information; column
should be called \code{group}}

\item{features}{Ignored}

\item{scale.layer}{Ignored}

\item{layers}{Ignored}

\item{npcs}{If doing PCA on input matrix, number of PCs to compute.}

\item{theta}{Diversity clustering penalty parameter. Specify for each
variable in vars_use Default theta=2. theta=0 does not encourage any 
diversity. Larger values of theta result in more diverse clusters.}

\item{lambda}{Ridge regression penalty parameter. Specify for each variable
 in vars_use. 
Default lambda=1. Lambda must be strictly positive. Smaller values result 
in more aggressive correction.}

\item{sigma}{Width of soft kmeans clusters. Default sigma=0.1. Sigma scales
the distance from a cell to cluster centroids. Larger values of sigma 
result in cells assigned to more clusters. Smaller values of sigma make 
soft kmeans cluster approach hard clustering.}

\item{nclust}{Number of clusters in model. nclust=1 equivalent to simple 
linear regression.}

\item{tau}{Protection against overclustering small datasets with large ones.
tau is the expected number of cells per cluster.}

\item{block.size}{What proportion of cells to update during clustering.
Between 0 to 1, default 0.05. Larger values may be faster but less accurate}

\item{max.iter.harmony}{Maximum number of rounds to run Harmony. One round
of Harmony involves one clustering and one correction step.}

\item{max.iter.cluster}{Maximum number of rounds to run clustering at each 
round of Harmony.}

\item{epsilon.cluster}{Convergence tolerance for clustering round of 
Harmony. Set to -Inf to never stop early.}

\item{epsilon.harmony}{Convergence tolerance for Harmony. Set to -Inf to
never stop early.}

\item{verbose}{Whether to print progress messages. TRUE to print, 
FALSE to suppress.}

\item{...}{Ignored}
}
\value{
...
}
\description{
Harmony Integration
}
\note{
This function requires the
\href{https://cran.r-project.org/package=harmony}{\pkg{harmony}} package
to be installed
}
\examples{
\dontrun{
# Preprocessing
obj <- SeuratData::LoadData("pbmcsca")
obj[["RNA"]] <- split(obj[["RNA"]], f = obj$Method)
obj <- NormalizeData(obj)
obj <- FindVariableFeatures(obj)
obj <- ScaleData(obj)
obj <- RunPCA(obj)

# After preprocessing, we integrate layers with added parameters specific to Harmony:
obj <- IntegrateLayers(object = obj, method = HarmonyIntegration, orig.reduction = "pca",
  new.reduction = 'harmony', verbose = FALSE)

# Modifying Parameters
# We can also add arguments specific to Harmony such as theta, to give more diverse clusters 
obj <- IntegrateLayers(object = obj, method = HarmonyIntegration, orig.reduction = "pca",
  new.reduction = 'harmony', verbose = FALSE, theta = 3)
}

# Integrating SCTransformed data
obj <- SCTransform(object = obj)
obj <- IntegrateLayers(object = obj, method = HarmonyIntegration, 
  orig.reduction = "pca", new.reduction = 'harmony', 
  assay = "SCT", verbose = FALSE)
  

}
\seealso{
\code{\link[harmony:HarmonyMatrix]{harmony::HarmonyMatrix}()}
}
\concept{integration}
